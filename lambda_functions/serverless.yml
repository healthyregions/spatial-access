# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: metrics
# app and org for use with dashboard.serverless.com
# app: metrics
# org: stuartlynn

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  httpApi:
    cors: true
  name: aws
  runtime: python3.8
  region: us-east-2
  timeout: 20
  environment:
    # Bucket that is used to store the data for the calculations
    ACCESS_BUCKET: 'spatial-access'
    # Path within the bucket to be used to store the data 
    ACCESS_PATH: "jobs" 
    SYSTEM_PATH: 'system-files'
    REGION_NAME: 'us-east-2'
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource: 
            - "arn:aws:s3:::${self:provider.environment.ACCESS_BUCKET}/${self:provider.environment.ACCESS_PATH}/*" 
            - "arn:aws:s3:::${self:provider.environment.ACCESS_BUCKET}/${self:provider.environment.SYSTEM_PATH}/*"

functions:
  create_job:
    handler: handler.create_job
    events:
      - httpApi:
          path: /jobs
          method: post
  get_job:
    handler: handler.get_job
    events:
      - httpApi:
          path: /jobs/{job_id}
          method: get 
  run_job:
    handler: handler.run_job
    events:
      - httpApi:
          path: /jobs/{job_id}/run
          method: post 
  process_job:
    handler: geo_handler.process_job # trigger when there's creation in the S3 bucket
    timeout: 300
    memorySize: 10240
    events:
      - s3:
          bucket: spatial-access
          event: s3:ObjectCreated:*
          rules:
            - prefix: jobs/ 
            - suffix: .json
          existing: true
          forceDeploy: true
  hello:
    handler: geo_handler.hello

plugins:
  - serverless-python-requirements
  - ./.serverless_plugins/lambda-update-deprecated-runtime.js
  
custom:
  pythonRequirements:
    dockerizePip: true
    zip: true  
    strip: false
    useDownloadCache: true 
    useStaticCache: true 

package:
  exclude:
    - node_modules/**
    - venv/**
    - __pycache__/**